# bss段

.section .bss
	.lcomm buffer, 10000

.section .text
.global _start

_start:
	movl $1, %eax
	movl $0, %ebx
	int $0x80

# .comm 声明未初始化的数据的通用内存区域
# .lcomm 声明未初始化等数据等本地通用内存区域

# 在bss段中声明数据的一个好处是：数据不包含在任何可执行程序中。
# 在data段中声明的数据会包含在可执行程序中，因为必须使用特殊值初始化它。
# 关于上述两点可以通过查看生成的可执行文件大小便可以很明显等感受到

# 注意：
# 在单纯的汇编环境中，也可以在data段中仅声明而不初始化，汇编器不会报错，但不建议这么做
# 比如将上述程序的bss单纯的改成data也可以通过汇编，如若这样，上述结论就不在成立。

# 以下是从C语言的角度来理解“段”
# text段:就是放程序代码的,编译时确定,只读,
# data段:存放在编译阶段(而非运行时)就能确定的数据,可读可写
#		 就是通常所说的静态存储区,赋了初值的全局变量和静态变量存放在这个区域,常量也存放在这个区域
# bss段:定义而没有赋初值的全局变量和静态变量,放在这个区域
